{"pageProps":{"codeData":{"id":"sync_mutex.gos","codeContent":"package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\ntype Container struct {\n    counters map[string]int\n    mu       sync.Mutex\n}\n\n\nfunc (c *Container) inc(name string) {\n\n    c.mu.Lock()\n    defer c.mu.Unlock()\n    c.counters[name] +=100\n}\n\n\nfunc sync_map() {\n    var m sync.Map\n\n    m.Store(2, \"b\")\n    v, ok := m.LoadOrStore(1, \"a\")\n    v2, ok2 := m.Load(1)\n    assert(v == \"a\")\n    assert(!ok)\n    assert(v2 == \"a\")\n    assert(ok2)\n    fmt.Println(v, ok, v2, ok2)\n    fmt.Println(m)\n    m.Delete(2)\n    v3, _ := m.Load(2)\n    fmt.Println(m, v3)\n    assert(v3 == nil)\n    \n\n}\n\n\nfunc main() {\n\n    sync_map()\n\n    /*\n    c := Container{\n\n        counters: map[string]int{\"a\": 0, \"b\": 0},\n    }\n    c.inc(\"aaa\")\n\n    go c.inc(\"aaa\")\n\n\n    fmt.Println(c.counters)\n    for i := 0; i < 10000; i++ {\n        \n    }\n    fmt.Println(c.counters)\n\n    fmt.Println()\n    */\n}"},"codeIds":[{"params":{"id":"array.gos"}},{"params":{"id":"async.gos"}},{"params":{"id":"basictypes.gos"}},{"params":{"id":"blankid.gos"}},{"params":{"id":"bytes.gos"}},{"params":{"id":"case1.gos"}},{"params":{"id":"channel.gos"}},{"params":{"id":"closure1.gos"}},{"params":{"id":"closure2.gos"}},{"params":{"id":"closure3.gos"}},{"params":{"id":"closure4.gos"}},{"params":{"id":"complex.gos"}},{"params":{"id":"composite.gos"}},{"params":{"id":"conversion.gos"}},{"params":{"id":"declare.gos"}},{"params":{"id":"defer.gos"}},{"params":{"id":"display.gos"}},{"params":{"id":"fmt.gos"}},{"params":{"id":"for.gos"}},{"params":{"id":"func1.gos"}},{"params":{"id":"goto.gos"}},{"params":{"id":"if.gos"}},{"params":{"id":"init_func.gos"}},{"params":{"id":"initorder.gos"}},{"params":{"id":"interface1.gos"}},{"params":{"id":"interface2.gos"}},{"params":{"id":"map1.gos"}},{"params":{"id":"math.gos"}},{"params":{"id":"nil.gos"}},{"params":{"id":"operations.gos"}},{"params":{"id":"path.gos"}},{"params":{"id":"pkg.gos"}},{"params":{"id":"pointer.gos"}},{"params":{"id":"recover.gos"}},{"params":{"id":"reflect.gos"}},{"params":{"id":"select.gos"}},{"params":{"id":"slice1.gos"}},{"params":{"id":"sort.gos"}},{"params":{"id":"strconv.gos"}},{"params":{"id":"strings.gos"}},{"params":{"id":"switch.gos"}},{"params":{"id":"sync_mutex.gos"}},{"params":{"id":"sync_rwmutex.gos"}},{"params":{"id":"time.gos"}},{"params":{"id":"type1.gos"}},{"params":{"id":"typeswitch.gos"}}]},"__N_SSG":true}