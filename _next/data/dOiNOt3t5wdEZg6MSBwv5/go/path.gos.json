{"pageProps":{"codeData":{"id":"path.gos","codeContent":"package main\n\nimport (\n\t\"path\"\n)\n\ntype PathTest struct {\n\tpath, result string\n}\n\nvar cleantests = []PathTest{\n\t// Already clean\n\t{\"\", \".\"},\n\t{\"abc\", \"abc\"},\n\t{\"abc/def\", \"abc/def\"},\n\t{\"a/b/c\", \"a/b/c\"},\n\t{\".\", \".\"},\n\t{\"..\", \"..\"},\n\t{\"../..\", \"../..\"},\n\t{\"../../abc\", \"../../abc\"},\n\t{\"/abc\", \"/abc\"},\n\t{\"/\", \"/\"},\n\n\t// Remove trailing slash\n\t{\"abc/\", \"abc\"},\n\t{\"abc/def/\", \"abc/def\"},\n\t{\"a/b/c/\", \"a/b/c\"},\n\t{\"./\", \".\"},\n\t{\"../\", \"..\"},\n\t{\"../../\", \"../..\"},\n\t{\"/abc/\", \"/abc\"},\n\n\t// Remove doubled slash\n\t{\"abc//def//ghi\", \"abc/def/ghi\"},\n\t{\"//abc\", \"/abc\"},\n\t{\"///abc\", \"/abc\"},\n\t{\"//abc//\", \"/abc\"},\n\t{\"abc//\", \"abc\"},\n\n\t// Remove . elements\n\t{\"abc/./def\", \"abc/def\"},\n\t{\"/./abc/def\", \"/abc/def\"},\n\t{\"abc/.\", \"abc\"},\n\n\t// Remove .. elements\n\t{\"abc/def/ghi/../jkl\", \"abc/def/jkl\"},\n\t{\"abc/def/../ghi/../jkl\", \"abc/jkl\"},\n\t{\"abc/def/..\", \"abc\"},\n\t{\"abc/def/../..\", \".\"},\n\t{\"/abc/def/../..\", \"/\"},\n\t{\"abc/def/../../..\", \"..\"},\n\t{\"/abc/def/../../..\", \"/\"},\n\t{\"abc/def/../../../ghi/jkl/../../../mno\", \"../../mno\"},\n\n\t// Combinations\n\t{\"abc/./../def\", \"def\"},\n\t{\"abc//./../def\", \"def\"},\n\t{\"abc/../../././../def\", \"../../def\"},\n}\n\nfunc main() {\n\t\n\tfor _, test := range cleantests {\n        assert(path.Clean(test.path) == test.result)\n        assert(path.Clean(test.result) == test.result)\n\t}\n\t\n}"},"codeIds":[{"params":{"id":"array.gos"}},{"params":{"id":"async.gos"}},{"params":{"id":"basictypes.gos"}},{"params":{"id":"blankid.gos"}},{"params":{"id":"bytes.gos"}},{"params":{"id":"case1.gos"}},{"params":{"id":"channel.gos"}},{"params":{"id":"closure1.gos"}},{"params":{"id":"closure2.gos"}},{"params":{"id":"closure3.gos"}},{"params":{"id":"closure4.gos"}},{"params":{"id":"complex.gos"}},{"params":{"id":"composite.gos"}},{"params":{"id":"conversion.gos"}},{"params":{"id":"declare.gos"}},{"params":{"id":"defer.gos"}},{"params":{"id":"display.gos"}},{"params":{"id":"fmt.gos"}},{"params":{"id":"for.gos"}},{"params":{"id":"func1.gos"}},{"params":{"id":"goto.gos"}},{"params":{"id":"if.gos"}},{"params":{"id":"init_func.gos"}},{"params":{"id":"initorder.gos"}},{"params":{"id":"interface1.gos"}},{"params":{"id":"interface2.gos"}},{"params":{"id":"map1.gos"}},{"params":{"id":"math.gos"}},{"params":{"id":"nil.gos"}},{"params":{"id":"operations.gos"}},{"params":{"id":"path.gos"}},{"params":{"id":"pkg.gos"}},{"params":{"id":"pointer.gos"}},{"params":{"id":"recover.gos"}},{"params":{"id":"reflect.gos"}},{"params":{"id":"select.gos"}},{"params":{"id":"slice1.gos"}},{"params":{"id":"sort.gos"}},{"params":{"id":"strconv.gos"}},{"params":{"id":"strings.gos"}},{"params":{"id":"switch.gos"}},{"params":{"id":"sync_mutex.gos"}},{"params":{"id":"sync_rwmutex.gos"}},{"params":{"id":"time.gos"}},{"params":{"id":"type1.gos"}},{"params":{"id":"typeswitch.gos"}}]},"__N_SSG":true}