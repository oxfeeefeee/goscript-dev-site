{"pageProps":{"codeData":{"id":"pkg.gos","codeContent":"package main\n\n\nimport (\n  . \"fmt\"\n)\n    \n\nconst k = i + 1\n\nconst i = 7\n\nvar b = a + k\nvar a = 8\n\n\n\ntype Kind uint\n\nconst (\n\tInvalid Kind = iota\n\tBool\n\tInt\n\tInt8\n\tInt16\n\tInt32\n\tInt64\n\tUint\n\tUint8\n\tUint16\n\tUint32\n\tUint64\n\tUintptr\n\tFloat32\n\tFloat64\n\tComplex64\n\tComplex128\n\tArray\n\tChan\n\tFunc\n\tInterface\n\tMap\n\tPtr\n\tSlice\n\tString\n\tStruct\n\tUnsafePointer\n)\n\nvar kindNames = []string{\n\tInvalid:       \"invalid\",\n\tBool:          \"bool\",\n\tInt:           \"int\",\n\tInt8:          \"int8\",\n\tInt16:         \"int16\",\n\tInt32:         \"int32\",\n\tInt64:         \"int64\",\n\tUint:          \"uint\",\n\tUint8:         \"uint8\",\n\tUint16:        \"uint16\",\n\tUint32:        \"uint32\",\n\tUint64:        \"uint64\",\n\tUintptr:       \"uintptr\",\n\tFloat32:       \"float32\",\n\tFloat64:       \"float64\",\n\tComplex64:     \"complex64\",\n\tComplex128:    \"complex128\",\n\tArray:         \"array\",\n\tChan:          \"chan\",\n\tFunc:          \"func\",\n\tInterface:     \"interface\",\n\tMap:           \"map\",\n\tPtr:           \"ptr\",\n\tSlice:         \"slice\",\n\tString:        \"string\",\n\tStruct:        \"struct\",\n\tUnsafePointer: \"unsafe.Pointer\",\n}\n\nfunc test1() {\n    _, j := fa()\n    assert(j == 7)\n\n    assert(kindNames[2] == \"int\")\n}\n\nfunc fa () (int, int) {\n\tassert(8 == fb())\n\treturn 6,7\n}\n\nfunc fb() int {\n\treturn 8\n}\n\nfunc test2() {\n\tPrintln(\"Hello, World!\")\n}\n\nfunc main() {\n\ttest1()\n\ttest2()\n}\n"},"codeIds":[{"params":{"id":"array.gos"}},{"params":{"id":"async.gos"}},{"params":{"id":"basictypes.gos"}},{"params":{"id":"blankid.gos"}},{"params":{"id":"bytes.gos"}},{"params":{"id":"case1.gos"}},{"params":{"id":"channel.gos"}},{"params":{"id":"closure1.gos"}},{"params":{"id":"closure2.gos"}},{"params":{"id":"closure3.gos"}},{"params":{"id":"closure4.gos"}},{"params":{"id":"complex.gos"}},{"params":{"id":"composite.gos"}},{"params":{"id":"conversion.gos"}},{"params":{"id":"declare.gos"}},{"params":{"id":"defer.gos"}},{"params":{"id":"display.gos"}},{"params":{"id":"fmt.gos"}},{"params":{"id":"for.gos"}},{"params":{"id":"func1.gos"}},{"params":{"id":"goto.gos"}},{"params":{"id":"if.gos"}},{"params":{"id":"init_func.gos"}},{"params":{"id":"initorder.gos"}},{"params":{"id":"interface1.gos"}},{"params":{"id":"interface2.gos"}},{"params":{"id":"map1.gos"}},{"params":{"id":"math.gos"}},{"params":{"id":"nil.gos"}},{"params":{"id":"operations.gos"}},{"params":{"id":"path.gos"}},{"params":{"id":"pkg.gos"}},{"params":{"id":"pointer.gos"}},{"params":{"id":"recover.gos"}},{"params":{"id":"reflect.gos"}},{"params":{"id":"select.gos"}},{"params":{"id":"slice1.gos"}},{"params":{"id":"sort.gos"}},{"params":{"id":"strconv.gos"}},{"params":{"id":"strings.gos"}},{"params":{"id":"switch.gos"}},{"params":{"id":"sync_mutex.gos"}},{"params":{"id":"sync_rwmutex.gos"}},{"params":{"id":"time.gos"}},{"params":{"id":"type1.gos"}},{"params":{"id":"typeswitch.gos"}}]},"__N_SSG":true}